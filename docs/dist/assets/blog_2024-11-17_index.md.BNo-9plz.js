import{_ as t,c as n,a1 as i,o as a}from"./chunks/framework.BDxlaA_J.js";const o="/mascot/bulb.png",p=JSON.parse('{"title":"Hoisting in Danfe","description":"","frontmatter":{"title":"Hoisting in Danfe","date":"2024-11-17T00:00:00.000Z"},"headers":[],"relativePath":"blog/2024-11-17/index.md","filePath":"blog/2024-11-17/index.md"}'),s={name:"blog/2024-11-17/index.md"};function r(l,e,g,d,h,c){return a(),n("div",null,e[0]||(e[0]=[i('<h1 id="hoisting-in-danfe" tabindex="-1">Hoisting in Danfe <a class="header-anchor" href="#hoisting-in-danfe" aria-label="Permalink to &quot;Hoisting in Danfe&quot;">​</a></h1><p><a href="/blog">&lt;- Back to blogs</a></p><p>This is just a quick <strong>update</strong>, but an exciting one! I’ve successfully implemented <code>hoisting</code> in my own programming language, and it’s working beautifully. The process of solving a tricky scope issue turned out to be quite the adventure. I was chatting with someone when, mid-conversation, something clicked. It was like a spark went off in my head, and suddenly, I knew exactly how to tackle the problem. Funny enough, I even blurted it out to the person I was talking to—who, understandably, wasn’t thrilled that my brain had wandered elsewhere. But hey, inspiration strikes when it strikes, right?</p><p>That moment led me to finally crack the process for creating hoisting in <em>Danfe</em>, and I couldn’t be more thrilled. This language, which I’ve been building using Vlang, is shaping up better every day. For now, it’s a <strong>&quot;toy language&quot;</strong> for experimenting and learning, but it’s paving the way for something much bigger: the <code>official</code> Danfe. This next version will be a fully compiled language with way more features, drawing from everything I’ve learned along the way. The journey has just begun, and I can’t wait to see where it goes!</p><p><span style="color:gray;font-size:14px;">Date: 2024-11-17</span><img src="'+o+'" style="height:170px;position:absolute;right:0;"></p>',5)]))}const m=t(s,[["render",r]]);export{p as __pageData,m as default};
